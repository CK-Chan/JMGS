<style lang="less">
.ui-userinfo--box {
  overflow: hidden;
  border: 1rpx solid #e0e0e0;
  border-radius: 7rpx;
  margin: 20rpx 9rpx 40rpx;
  transition: all 0.2s ease;
  box-shadow: 0 0 6rpx rgba(0, 0, 0, 0.15);
  z-index: 10;
  background: #fff;
}

.ui-userinfo {
  padding: 35rpx;
  display: flex;
  flex-direction: row;
}

.ui-slogan-box {
  position: relative;
  margin-top: 40rpx;
  border-top: 1rpx solid #e9e9e9;
  padding: 20rpx 15rpx 15rpx 1rem;
}

.ui-slogan {
  position: absolute;
  top: -24rpx;
  line-height: 26rpx;
  padding: 10rpx 14rpx;
  font-size: 26rpx;
  color: #555;
  border-radius: 8rpx;
  background: #f2f2f2;
}

.ui-user-nickname {
  margin-top: 20rpx;
  margin-left: 2rem;
  color: #555;
  font-size: 36rpx;
  max-width: 6rem;
  max-height: 2rem;
  text-overflow: ellipsis;
  overflow: hidden;
}

.ui-record-box {
  position: relative;
}

.ui-user-record {
  right: 20rpx;
  top: -52rpx;
  color: #369;
  opacity: 0.5;
  font-size: 26rpx;
  padding: 12rpx 12rpx 12rpx;
  text-align: right;
}

.ui-user-avatar {
  left: 1rem;
  width: 3.2rem;
  height: 3.2rem;
  border-radius: 1.6rem;
  box-shadow: 0 0 6rpx rgba(0, 0, 0, 0.15);
}
</style>
<template>
<view class="ui-userinfo--box">

    <view class="ui-userinfo">
      <image class="ui-user-avatar" src="{{avatarSrc}}"></image>
      <view class="ui-user-nickname">{{nickname}}</view>
    </view>
    <view class="ui-slogan-box">
        <view class="ui-slogan">    敢说不是能儿，敢做才是事儿</view>
    </view>
    <view class="ui-record-box">
        <view class="ui-user-record">敢说：  <i style="font-size:22rpx">{{ganshuoCounts}}</i>    |   敢做：   <i style="font-size:22rpx">{{ganzuoCounts}}</i> </view>
    </view>
</view>
</template>
<script>
  import wepy from 'wepy'
  export default class UserInfo extends wepy.component {
    props = {
      avatarSrc:{
        type: String,
        default: ''
      },
      nickname:{
        type: String,
        default: ''
      },
      ganshuoCounts:{
        type: String,
        default: ''
      },
      ganzuoCounts:{
        type: String,
        default: ''
      }

    }

    data = {
    }
    computed = {
    }
    events = {

    }

    watch = {
    }

    methods = {

    }
    onLoad() {
    }
  }
</script>
