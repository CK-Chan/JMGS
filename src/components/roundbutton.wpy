<style lang="less">
  //dare button ----------------------
  .rd-round-button {
    position: absolute;
    display: block;
    width: 3rem;
    height: 3rem;
    line-height: 3rem;
    border: 0.2rem solid #f5f5f5;
    border-radius: 50%;
    color: #f5f5f5;
    text-align: center;
    text-decoration: none;
    background: #464646;
    box-shadow: 0 0 0.3rem gray;
    font-size: 24px;
    font-weight: bold;
    user-select: none;
    z-index: 1000;
  }
  .rd-round-button-shine {
    animation: bgcolorchange ease-in 2s infinite;
  }
  .rd-round-button-tap {
    background: #262626;
  }
  @keyframes bgcolorchange {
    0% {
      background: #464646;
    }
    50% {
      background: #87240e;
    }
    100% {
      background: #464646;
    }
  }
</style>

<template>
  <view id="round-button" style="top: {{btnPos.y}}px;left: {{btnPos.x}}px;" class="rd-round-button {{'true' === shine ? buttonShine : ''}} {{buttonTouched}}" @touchstart="touchstart" @touchend="touchend" @touchmove="touchmove" @tap="tap">
    {{name}}</view>
</template>

<script>
  import wepy from "wepy";
  export default class RoundButton extends wepy.component {
    props = {
      name: {
        type: String,
        default: 'button'
      },
      shine: {
        type: String,
        default: 'false'
      }
    };
    data = {
      btnPos: {
        x: "250",
        y: "100"
      },
      touchDeviation: {
        x: "0",
        y: "0"
      },
      touchStarted: false,
      buttonShine: "rd-round-button-shine",
      buttonTouched: ""
    };
    events = {};
    watch = {};
    methods = {
      touchstart(e) {
        console.log('touch started')
        this.buttonTouched = "rd-round-button-tap";
        this.buttonShine = "";
        this.touchStarted = true;
        this.$apply()
      },
      touchend(e) {
        console.log('touch ended')
        let _this = this;
        setTimeout(() => {
          _this.buttonTouched = "";
          _this.buttonShine = "rd-round-button-shine";
          _this.$apply();
        }, 200);
      },
      touchmove(e) {
        //only count once the deviation
        if (this.touchStarted) {
          this.touchDeviation = {
            x: e.changedTouches[0].pageX - this.btnPos.x,
            y: e.changedTouches[0].pageY - this.btnPos.y
          };
          this.touchStarted = false;
          console.log("touch deviation calculated");
        }
        this.btnPos = {
          x: e.changedTouches[0].pageX - this.touchDeviation.x,
          y: e.changedTouches[0].pageY - this.touchDeviation.y
        };
      },
      tap() {
        this.$emit('tap')
      }
    };
  }
</script>
