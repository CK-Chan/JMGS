<style lang="css">
@import "./assets/style/weui.wxss";
@import "./assets/style/fontawesome.wxss";
.container {
  background: #f8f8f8;
  overflow: hidden;
  min-height: 100vh;
  box-sizing: border-box;
  padding: 15px 0;
}
.container::before {
  position: fixed;
  top: 0;
  left: 0;
  content: " ";
  width: 100%;
  height: 1rpx;
  background-color: #e2e2e2;
  z-index: 5;
}
</style>

<script>
import wepy from "wepy";
import "wepy-async-function";
import Config from '@/util/config'

export default class extends wepy.app {
  config = {
    pages: [
      "pages/map",
      "pages/playvideo",
      "pages/userrecord",
      "pages/display",
      "pages/afterspeak",
      "pages/beforespeak",
    ],
    window: {
      backgroundTextStyle: "light",
      navigationBarBackgroundColor: "#fff",
      navigationBarTitleText: "WeChat",
      navigationBarTextStyle: "black",
      //enablePullDownRefresh: true
    }
  };

  globalData = {
    userInfo: null,
    location: {},
    bulletinTyped: false,
    acCtx: null,
    config: null,
    token: '',
  };

  constructor() {
    super();
    this.use("requestfix");
  }

  async onLaunch() {
    const _this = this;
    //this.testAsync()
    this.globalData.acCtx = wepy.createInnerAudioContext();
    this.globalData.config = Config();

    this.login(this);
  }

  sleep(s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve("promise resolved");
      }, s * 1000);
    });
  }

  async getUserInfo(cb) {
    const that = this;
    if (this.globalData.userInfo) {
      return this.globalData.userInfo;
    }
    wepy.getUserInfo({
      success(res) {
        that.globalData.userInfo = res.userInfo;
        cb && cb(res.userInfo);
      }
    });
  }

  login(app) {
    new Promise((resolve, reject) => {
      wx.login({
        success(res) {
          const code = res.code;
          if (code) {
            wx.getUserInfo({
              success(res) {
                //取得code iv encryptedData
                const iv = res.iv;
                const encryptedData = res.encryptedData;
                const rawData = res.rawData;
                wx.request({
                  url: app.globalData.config.loginUrl,
                  method: "POST",
                  data: {
                    code: code,
                    encryptedData: encryptedData,
                    iv: iv,
                    rawData: rawData
                  },
                  success: function (data) {
                    if (data.error) {
                      app.globalData.config.showError('Err002', data.error);
                      reject();
                    } else {
                      //返回的数据中应当包含jwt
                      resolve(data)
                    }
                  },
                  fail: function (res) {
                    console.warn("系统错误");
                    app.globalData.config.showError('Err003', res);
                  }
                });
              },
              fail(res) {
                console.warn("获取用户信息失败！");
                app.globalData.config.showError('Err004', res);
                reject();
              }
            });
          } else {
            app.globalData.config.showError('Err001', res);
          }
        }
      });
    }).then(res => {
      //取得token ，加入缓存中
      //app.globalData.config.showError('Msg001');
      const {authorization, userInfo} = res.data;
      app.globalData.userInfo = userInfo;
      this.globalData.token = authorization;
      console.info('登陆成功！');
    })
  }
}

</script>
