<style lang='less'>
.player {
  width: 80%;
  bottom: 0;
  text-align: center;
  padding: 15px calc(10%) 15px;
}
.submit {
  position: absolute;
  width: 80%;
  bottom: 0px;
  padding: 15px calc(10%) 2rem;
}
.hide {
  display: none;
}
.show {
  display: inline;
}
.addPadding {
  padding: 2rem auto 2rem;
  text-align: center;
  padding-bottom: 1rem;
}
.checkedIcon {
  margin: 0px 10px 0px;
}
.flex {
  display: flex;
  flex-direction: row;
}
</style>
<template>
  <view class="container">

      <view class="weui-panel weui-panel_access">
            <view class="weui-panel__hd"><button type="primary">播放内容</button></view>
      </view>
      <view class="weui-cells__title">默认为{{config.howLong}}天，超出需要支付占位费。</view>
        <view class="weui-cells weui-cells_after-title">
            <view class="weui-cell">
                <view class="weui-cell__bd">时限：</view>
                <view class="weui-cell__ft">
                  <!-- remember to set the value with the data in config file, set it dynamically will cause the slider not working -->
                  <slider min="1" max="7" @change="changeTime" show-value/>
                </view>
            </view>
        </view>
        <view class="weui-cells__title">默认为当前地址。范围: {{config.allowedCities}}内。</view>
        <view class="weui-cells weui-cells_after-title">
            <view class="weui-cell">
                <view class="weui-cell__bd">地点：</view>
                <view class="weui-cell__ft flex" >
                    <view class="checkedIcon {{posChosed}}">
                      <icon type="success" size="32"/>
                    </view>
                    <button type="{{mapPicked}}" plain="true" size="mini" @tap="pickLoc">{{config.beforPosChosed}}</button>
                </view>
            </view>
        </view>
        <view class="weui-cells__title">默认为{{config.howMany}}人，关闭后则没有人数限制，但须支援服务器费用。</view>
        <view class="weui-cells weui-cells_after-title">
            <view class="weui-cell">
                <view class="weui-cell__bd">人数限制：</view>
                <view class="weui-cell__ft">
                  <switch bindchange="unlimitNo"/>
                </view>
            </view>
        </view>


      <view class="submit weui-flex">
        <button type="warn" plain="true" style="width:40%">返回</button>
        <button type="primary" style="width:40%" @tap="submit">提交</button>
      </view>

      <mappicker direction="bottom">
        <view class="weui-panel weui-panel_access {{pickerDisplay}}">
            <view class="weui-panel__hd">请在地图中选中展出的位置</view>
            <view class="weui-panel__bd  addPadding">
                 <map id="map" longitude="107.153435" latitude="34.373231" scale="14"
                    controls="{{controls}}"
                    show-location style="width:100%; height:20rem;"></map>
            </view>
              <view class="weui-flex addPadding" style="padding-bottom: 1rem;">
                <button size="mini" @tap="cancelPick" type="default" plain="true" style="width:40%">返回</button>
                <button size="mini" @tap="grabCoordinates" type="primary" plain="true" style="width:40%">选中</button>
              </view>

        </view>
      </mappicker>
  </view>

</template>


<script>
import wepy from "wepy";
import testMixin from "../mixins/test";
import Mock from "@/util/Mock";
import Config from "@/util/config";
import MapPicker from "../components/mapPicker";

export default class AfterSpeak extends wepy.page {
  config = {
    navigationBarTitleText: "创建敢说"
  };
  components = {
    mappicker: MapPicker
  };

  mixins = [testMixin];

  data = {
    pickerDisplay: "hide", //flag to hide the original component
    mapPicked: "warn",
    posChosed: "hide",
    controls: [],
    formData: {
      howLong: 1,
      where: {
        longitude: "",
        latitude: ""
      },
      howMany: 50
    },
    config: Config(),
    mapCtx: null
  };

  computed = {
    now() {
      return +new Date();
    }
  };

  methods = {
    pickLoc() {
      let _this = this
      console.log("mapPicker taped");
      this.pickerDisplay = "show";
      this.$invoke("mappicker", "showPopup");
      //add loading toast for safety
      wepy.showLoading({
        title: '请稍后...',
        mask: true
      })

      //set the pin pic after the animation
      setTimeout(() => {
        //hideloading
        wepy.hideLoading();

        //get the coordinates of pin pic
        wepy
          .createSelectorQuery()
          .select("#map")
          .boundingClientRect(function(rect) {
            _this.controls.push({
              id: 1,
              iconPath: "../assets/images/pin.png",
              position: {
                left: rect.width / 2 - 12,
                top: rect.height / 2 - 24,
                width: 24,
                height: 24
              },
              clickable: false
            });
            _this.$apply()
            //console.log(rect);
          })
          .exec();

      }, 400); // a lucky number
    },
    cancelPick() {
      this.pickerDisplay = "hide";
      this.$invoke("mappicker", "hidePopup");
    },
    grabCoordinates() {
      this.pickerDisplay = "hide";
      this.$invoke("mappicker", "hidePopup");
      this.mapPicked = "primary";
      this.config.beforPosChosed = this.config.afterPosChosed;

      //set the cent coordinates into form data
      this.mapCtx = this.mapCtx || wepy.createMapContext("map");
      let _this = this;
      this.mapCtx.getCenterLocation({
        success: function(res) {
          _this.formData.where = {
            longitude: res.longitude,
            latitude: res.latitude
          };
          _this.posChosed = 'show'
          _this.$apply()
        },
        fail: function(res) {
          console.log(res);
        }
      });
    },
    submit() {
      console.log(this.formData);
    },
    changeTime(e) {
      this.formData.howLong = e.detail.value;
      // console.log(this.formData)
    },
    unlimitNo(e) {
      this.formData.howMany = e.detail.value ? undefined : this.config.howMany;
      //console.log(e)
    }
  };

  events = {};

  onLoad() {
    let _this = this;

    //get current position
    wepy.getLocation({
      type: "gcj02",
      success: function(res) {
        //console.log(res);
        _this.formData.where = {
          longitude: res.longitude,
          latitude: res.latitude
        };
      },
      fail: function(err) {
        wepy.showToast({
          icon: "none",
          title: "无法获取当前位置坐标"
        });
      }
    });
  }

  onReady() {}
}
</script>
