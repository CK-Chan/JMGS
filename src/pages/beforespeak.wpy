<style lang='css'>
@import "../assets/styles/animate.wxss";

.recorder {
  width: 80%;
  position: absolute;
  bottom: 0;
  padding: 15px calc(10%) 2rem;
}
</style>
<template>
<view class="container">

    <bulletin></bulletin>
    <view>{{log}}</view>
    <view id="btn-speak" class="recorder {{animation}}">
      <button type="{{buttonState.type}}"
          @tap="tip" @longpress="record" @touchend="touchend" @touchcancel=""
          hover-stop-propagation="true">
        {{buttonState.content}}
      </button>
    </view>

</view>
</template>


<script>
import wepy from "wepy";
import testMixin from "../mixins/test";
import Bulletin from "@/components/bulletin";
import Mock from "@/util/Mock";
const pageVars = {
  readyToRecord: "准备说：",
  buttonTip: "请长按录音...",
  recording: "正在录音...",
  canceled: "已取消!",
  waitAWhile: "请稍后...",
  cancelRecording: "松开 取消"
};

const status = {
  beforeRecording: 0,
  recording: 1,
  recorded: 2,
  canceled: 3
};
export default class BeforeSpeak extends wepy.page {
  config = {
    navigationBarTitleText: "准备说"
  };
  components = {
    bulletin: Bulletin
  };

  mixins = [testMixin];

  data = {
    animation: "animated bounce", //record button div
    buttonState: {
      content: pageVars.readyToRecord,
      type: "default"
    },
    currentStatus: status.beforeRecording,
    touchPoint: {
      clientX: 0,
      clientY: 0
    },
    recorderManager: null, //recorderManager
    tempFilePath: "", //save
    log: ""
  };

  computed = {
    now() {
      return +new Date();
    }
  };

  methods = {
    tip() {
      this.buttonState.content = pageVars.buttonTip;
    },
    record(e) {
      //longpress
      //change status

      //vibrate and alert sound
      for (let i = 0; i < 5; i++) {
        setTimeout(() => {
          wepy.vibrateShort();
        }, i * 15);
      }

      this.currentStatus = status.recording;
      this.buttonState.content = pageVars.cancelRecording;
      wepy.showToast({
        icon: "loading",
        title: pageVars.recording,
        mask: true,
        duration: 60000
      });
      //mark the coordinates
      this.touchPoint = {
        clientX: e.touches[0].clientX,
        clientY: e.touches[0].clientY
      };

      //start recording------
      let args = {
        duration: 60000,
        sampleRate: 8000,
        numberOfChannels: 1,
        encodeBitRate: 16000,
        format: "aac"
      };
      this.recorderManager.start(args);
    },
    touchend(e) {
      //when catch the touchend event , we should check the status first
      if (status.recording === this.currentStatus) {
        wepy.hideToast();
        let slidedUp = e.changedTouches[0].clientY < this.touchPoint.clientY; // canceling recording by sliding up
        if (slidedUp) {
          // if canceled the recording
          console.log("canceled the recording");
          this.currentStatus = status.canceled;
          this.buttonState.content = pageVars.readyToRecord; //reset the button
          setTimeout(() => {
            wepy.showToast({
              title: pageVars.canceled,
              icon: "none"
            });
          }, 300);
          //stop recording and not save
          this.recorderManager.stop();
        } else {
          //console.log('recorded')
          // recorded, add mask
          wepy.showLoading({
            title: pageVars.waitAWhile,
            mask: true
          });
          // prcessing the recording
          this.recorderManager.stop();
        }
      }
    }
  };

  events = {};

  onLoad() {
    this.$invoke("bulletin", "typeInfo", Mock.getBulletinInfo());

    //
    let rm = wepy.getRecorderManager();
    rm.onStart(() => {
      console.log("recorder start");
    });
    rm.onResume(() => {
      console.log("recorder resume");
    });
    rm.onStop(res => {
      console.log("recorder stop", res);
      //save the temp file path
      this.tempFilePath = res.tempFilePath;
      console.log("filepath: " + this.tempFilePath);
      if (status.canceled === this.currentStatus) {
        this.log = "cancel the recording, nothing saved  ";
      } else {
        //precess the audio
        let ac = wepy.createInnerAudioContext();
        ac.src = this.tempFilePath;
        ac.play();
      }
    });
    this.recorderManager = this.recorderManager || rm;
  }
}
</script>
